name: Build and deploy
on:
  push:
    branches:
      - main
      - test

jobs:
  create_image_url:
    runs-on: ubuntu-latest
    steps:
      - name: Get Github short sha
        uses: benjlevesque/short-sha@v3.0
        id: short-sha
      - name: Preset Image URL
        id: set_image_url
        run: echo "IMAGE_URL=$(echo docker.io/${{ vars.DOCKERHUB_REPOSITORY_NAME }}:pokedex-vue2-$(echo ${{ github.ref_name }})-$(echo ${{ steps.short-sha.outputs.sha }}))" >> $GITHUB_OUTPUT
    outputs:
      IMAGE_URL: ${{ steps.set_image_url.outputs.IMAGE_URL }}

  build:
    needs: create_image_url
    runs-on: ubuntu-latest
    steps:
      - name: Testing
        run: echo ${{ needs.create_image_url.outputs.IMAGE_URL }}
      # - name: Checkout
      #   uses: actions/checkout@v4

  #     - name: Get Github short sha
  #       uses: benjlevesque/short-sha@v3.0
  #       id: short-sha

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Preset Image Name
  #       run: echo "IMAGE_URL=$(echo docker.io/${{ vars.DOCKERHUB_REPOSITORY_NAME }}:pokedex-vue2-$(echo ${{ github.ref_name }})-$(echo ${{ steps.short-sha.outputs.sha }}))" >> $GITHUB_ENV

  #     - name: Echo Image URL
  #       run: echo ${{ env.IMAGE_URL }}

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #           username: ${{ secrets.DOCKERHUB_USERNAME }}
  #           password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Build and push image
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: .
  #         push: true
  #         tags: ${{ env.IMAGE_URL }}

  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Echo Image URL
  #       run: echo ${{ env.IMAGE_URL }}

  #     - name: Deploy Image to CapRrover
  #       uses: caprover/deploy-from-github@v1.1.2
  #       with:
  #         server: "${{ secrets.CAPROVER_SERVER }}"
  #         app: "${{ secrets.APP_NAME }}"
  #         token: "${{ secrets.APP_TOKEN }}"
  #         image: ${{ env.IMAGE_URL }}
  # update-tag:
  #   runs-on: ubuntu-latest
  #   needs: deploy
  #   steps:
  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v1-node16
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: "ap-southeast-1"

  #     - name: Authenticate docker with AWS ECR
  #       run: aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin ${{ vars.AWS_ECR_REGISTRY }}/${{ vars.AWS_ECR_IMAGE_NAME }}

  #     - name: Update docker image tag
  #       run: |
  #         docker pull ${{ vars.AWS_ECR_REGISTRY }}/${{ vars.AWS_ECR_IMAGE_NAME }}-${{ github.ref_name }}:temp-${{ github.sha }}
  #         docker tag ${{ vars.AWS_ECR_REGISTRY }}/${{ vars.AWS_ECR_IMAGE_NAME }}-${{ github.ref_name }}:temp-${{ github.sha }} ${{ vars.AWS_ECR_REGISTRY }}/${{ vars.AWS_ECR_IMAGE_NAME }}-${{ github.ref_name }}:latest
  #         docker push ${{ vars.AWS_ECR_REGISTRY }}/${{ vars.AWS_ECR_IMAGE_NAME }}-${{ github.ref_name }}:latest