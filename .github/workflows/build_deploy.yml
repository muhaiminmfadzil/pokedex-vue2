name: Build and deploy
on:
  push:
    branches:
      - main
      - test

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Github short sha
        uses: benjlevesque/short-sha@v3.0
        id: short-sha

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Preset Image Name
        run: echo "IMAGE_URL=$(echo docker.io/${{ vars.DOCKERHUB_REPOSITORY_NAME }}:pokedex-vue2-$(echo ${{ github.ref_name }})-$(echo ${{ steps.short-sha.outputs.sha }}))" >> $GITHUB_ENV

      - name: Image name
        run: echo ${{ env.IMAGE_URL }}
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #       username: ${{ secrets.DOCKERHUB_USERNAME }}
      #       password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Build
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     push: true
      #     tags: ${{ env.IMAGE_URL }}
          # tags: ${{ vars.DOCKERHUB_REGISTRY }}:pokedex-vue2-${{ github.ref_name }}-${{ steps.short-sha.outputs.sha }}

  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v1-node16
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: "ap-southeast-1"

  #     - name: Get task definition file
  #       run: aws s3 cp s3://${{ vars.AWS_S3_BUCKET }}/envs/${{ github.ref_name }}/task-definition-${{ github.ref_name }}.json task-definition.json

  #     - name: Task definition creation
  #       id: task-def
  #       uses: aws-actions/amazon-ecs-render-task-definition@v1
  #       with:
  #         task-definition: task-definition.json
  #         container-name: ${{ vars.AWS_ECS_CONTAINER_NAME }}-${{ github.ref_name }}
  #         image: ${{ vars.AWS_ECR_REGISTRY }}/${{ vars.AWS_ECR_IMAGE_NAME }}-${{ github.ref_name }}:temp-${{ github.sha }}

  #     - name: Deploy Amazon ECS task definition
  #       uses: aws-actions/amazon-ecs-deploy-task-definition@v1
  #       with:
  #         task-definition: ${{ steps.task-def.outputs.task-definition }}
  #         service: ${{ vars.AWS_ECS_SERVICE }}-${{ github.ref_name }}
  #         cluster: ${{ vars.AWS_ECS_CLUSTER }}-${{ github.ref_name }}
  #         wait-for-service-stability: false

  # update-tag:
  #   runs-on: ubuntu-latest
  #   needs: deploy
  #   steps:
  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v1-node16
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: "ap-southeast-1"

  #     - name: Authenticate docker with AWS ECR
  #       run: aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin ${{ vars.AWS_ECR_REGISTRY }}/${{ vars.AWS_ECR_IMAGE_NAME }}

  #     - name: Update docker image tag
  #       run: |
  #         docker pull ${{ vars.AWS_ECR_REGISTRY }}/${{ vars.AWS_ECR_IMAGE_NAME }}-${{ github.ref_name }}:temp-${{ github.sha }}
  #         docker tag ${{ vars.AWS_ECR_REGISTRY }}/${{ vars.AWS_ECR_IMAGE_NAME }}-${{ github.ref_name }}:temp-${{ github.sha }} ${{ vars.AWS_ECR_REGISTRY }}/${{ vars.AWS_ECR_IMAGE_NAME }}-${{ github.ref_name }}:latest
  #         docker push ${{ vars.AWS_ECR_REGISTRY }}/${{ vars.AWS_ECR_IMAGE_NAME }}-${{ github.ref_name }}:latest